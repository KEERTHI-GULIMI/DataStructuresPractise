

/*class Node
{
    int data;
    Node next;
    Node(int d)
    {
        data=d;next=null;
    }
}*/

class Solution {
 
    Node reverse(Node head) {
        if(head==null|| head.next==head){
            return head;
        }
        Node prev=null;
        Node current=head;
        Node next=null;
        
        do{
            
            next=current.next;
            current.next=prev;
            prev=current;
            current=next;
        }while(current!=head);
        
        head.next=prev;
        
        head=prev;
        
        return head;
        
    }

   
    Node deleteNode(Node head, int key) {
        
        if(head==null){
            return null;
        }
        
        if(head.data==key){
            
            if(head==head.next){
                return null;
            }
            
            Node temp=head.next;
            while(temp!=head){
                temp=temp.next;
            }
            
            temp.next=head.next;
            head=head.next;
            
            return head;
        }
        
        Node current=head;
        Node prev=null;
        
        do{
            prev=current;
            current=current.next;
            
            if(current.data==key){
                prev.next=current.next;
                return head;
            }
        }while(current!=head);
        
        return head;
        
    }
}
