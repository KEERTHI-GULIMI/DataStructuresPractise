Q->to find the ceil of a number



class Tree {
    // Function to return the ceil of given number in BST.
    int min=Integer.MAX_VALUE;
    int findCeil(Node root, int key) {
        if (root == null) return -1;
        
        if(root.data>=key){
            
            min=Math.min(min,root.data);
        }
        
        findCeil(root.left,key);
        findCeil(root.right,key);
        
        if(min!=Integer.MAX_VALUE){
            return min;
        }else{
            return -1;
        }   
    }
}


ITERATIVELY

class Tree {
   
    int findCeil(Node root, int key) {
        
        if (root == null) return -1;
        
        int ceil=Integer.MAX_VALUE;
        
        while(root!=null){
            
            if(root.data==key){
                return key;
            }else if(root.data>key){
                ceil=Math.min(ceil,root.data);
                root=root.left;
            }else{
                root=root.right;
            }
        }
        
        return (ceil!=Integer.MAX_VALUE)?ceil:-1;
        
    }
}
